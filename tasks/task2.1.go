package main

import (
    "fmt"
)

//
// Решение с использованием канала завершения
//
func main() {
    done := make(chan struct{})
    //
    // Планируем закрвтие канала после завершения
    // работы главного потока (main())
    //
    // Канал можно и не закрывать - он будет собран сборщиком мусора
    // когда у него не останется пользователей.
    //
    defer close(done)
    arr := [...]int{2, 4, 6, 8, 10}

    for i := 0; i < len(arr); i++ {
        //
        // Создаем по одной горутине для каждого числа
        //
        go func(num int, d chan<- struct{}) {
            fmt.Printf("%d\n", num * num)
            // 
            // Пишем в канал что работа завершена.
            //
            d<- struct{}{}
        }(arr[i], done)
    }

    for j := 0; j < len(arr); j++ {
        //
        // Читаем из канала пропорционально кол-ву горутин и выходим
        //
        <-done
    }
}
